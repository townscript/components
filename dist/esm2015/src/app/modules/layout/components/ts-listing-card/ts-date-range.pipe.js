import * as tslib_1 from "tslib";
import { Pipe } from '@angular/core';
import * as moment_ from 'moment';
const moment = moment_;
let RangeDatePipe = class RangeDatePipe {
    transform(rangeDates, args) {
        if (rangeDates) {
            const date = rangeDates.map(d => moment(d).format('DD'));
            const month = rangeDates.map(d => moment(d).format('MMM'));
            const time = moment(rangeDates[0]).format('hh:mm A');
            console.log(month[0]);
            if ((date[0] === date[1]) && (month[0] === month[1])) {
                return month[0] + ' ' + date[0] + ' | ' + time;
            }
            else if ((date[0] === date[1]) && (month[0] !== month[1])) {
                return month[0] + ' ' + date[0] + ' - ' + month[1] + ' ' + date[1] + ' | ' + time;
            }
            else {
                return month[0] + ' ' + date[0] + ' - ' + date[1] + ' | ' + time;
            }
        }
        else {
            return null;
        }
    }
};
RangeDatePipe = tslib_1.__decorate([
    Pipe({
        name: 'dateRange'
    })
], RangeDatePipe);
export { RangeDatePipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHMtZGF0ZS1yYW5nZS5waXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHRvd25zY3JpcHQvY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9sYXlvdXQvY29tcG9uZW50cy90cy1saXN0aW5nLWNhcmQvdHMtZGF0ZS1yYW5nZS5waXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUNwRCxPQUFPLEtBQUssT0FBTyxNQUFNLFFBQVEsQ0FBQztBQUNsQyxNQUFNLE1BQU0sR0FBRyxPQUFPLENBQUM7QUFNdkIsSUFBYSxhQUFhLEdBQTFCLE1BQWEsYUFBYTtJQUN0QixTQUFTLENBQUMsVUFBZSxFQUFFLElBQVU7UUFDakMsSUFBSSxVQUFVLEVBQUU7WUFDWixNQUFNLElBQUksR0FBRyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ3pELE1BQU0sS0FBSyxHQUFHLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7WUFDM0QsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUNyRCxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3RCLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7Z0JBQ2xELE9BQU8sS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsS0FBSyxHQUFHLElBQUksQ0FBQzthQUNsRDtpQkFBTSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO2dCQUN6RCxPQUFPLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLEdBQUcsSUFBSSxDQUFDO2FBQ3JGO2lCQUFNO2dCQUNILE9BQU8sS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLEdBQUcsS0FBSyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLEdBQUcsSUFBSSxDQUFDO2FBQ3BFO1NBQ0o7YUFBTTtZQUNILE9BQU8sSUFBSSxDQUFDO1NBQ2Y7SUFDTCxDQUFDO0NBQ0osQ0FBQTtBQWxCWSxhQUFhO0lBSnpCLElBQUksQ0FBQztRQUNGLElBQUksRUFBRSxXQUFXO0tBQ3BCLENBQUM7R0FFVyxhQUFhLENBa0J6QjtTQWxCWSxhQUFhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0ICogYXMgbW9tZW50XyBmcm9tICdtb21lbnQnO1xuY29uc3QgbW9tZW50ID0gbW9tZW50XztcblxuQFBpcGUoe1xuICAgIG5hbWU6ICdkYXRlUmFuZ2UnXG59KVxuXG5leHBvcnQgY2xhc3MgUmFuZ2VEYXRlUGlwZSBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuICAgIHRyYW5zZm9ybShyYW5nZURhdGVzOiBhbnksIGFyZ3M/OiBhbnkpOiBhbnkge1xuICAgICAgICBpZiAocmFuZ2VEYXRlcykge1xuICAgICAgICAgICAgY29uc3QgZGF0ZSA9IHJhbmdlRGF0ZXMubWFwKGQgPT4gbW9tZW50KGQpLmZvcm1hdCgnREQnKSk7XG4gICAgICAgICAgICBjb25zdCBtb250aCA9IHJhbmdlRGF0ZXMubWFwKGQgPT4gbW9tZW50KGQpLmZvcm1hdCgnTU1NJykpO1xuICAgICAgICAgICAgY29uc3QgdGltZSA9IG1vbWVudChyYW5nZURhdGVzWzBdKS5mb3JtYXQoJ2hoOm1tIEEnKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKG1vbnRoWzBdKTtcbiAgICAgICAgICAgIGlmICgoZGF0ZVswXSA9PT0gZGF0ZVsxXSkgJiYgKG1vbnRoWzBdID09PSBtb250aFsxXSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbW9udGhbMF0gKyAnICcgKyBkYXRlWzBdICsgJyB8ICcgKyB0aW1lO1xuICAgICAgICAgICAgfSBlbHNlIGlmICgoZGF0ZVswXSA9PT0gZGF0ZVsxXSkgJiYgKG1vbnRoWzBdICE9PSBtb250aFsxXSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbW9udGhbMF0gKyAnICcgKyBkYXRlWzBdICsgJyAtICcgKyBtb250aFsxXSArICcgJyArIGRhdGVbMV0gKyAnIHwgJyArIHRpbWU7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBtb250aFswXSArICcgJyArIGRhdGVbMF0gKyAnIC0gJyArIGRhdGVbMV0gKyAnIHwgJyArIHRpbWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgIH1cbn0iXX0=